{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hammy, a Ham Radio Discord Bot","text":"<p>Python based Ham Radio Callsign/APRS Discord lookup bot.</p>"},{"location":"#description","title":"Description","text":"<p>This is a Python based, self-hosted, Ham Radio Discord bot that can be added to Ham Radio Discord Servers to add some functionality for various Amatuer Radio Callsign related searches. </p> <p>This bot can be run in one of 2 ways:</p> <ul> <li>Docker (Preferred)</li> <li>Screen Session</li> </ul>"},{"location":"#searches","title":"Searches","text":"<ul> <li>Search for callsign and get callbook info.</li> <li>Search for callsign+ssid on the APRS network to see the last beaconed packet by a station.</li> </ul> <p>Note that this software is intended for use by Amateur Radio Operators only.</p>"},{"location":"#apis-used","title":"API's Used","text":"<p>This bot pulls data from the following locations:</p> Service Description Website Callook.info Used for Call Book data lookup https://callook.info/ HamQTH.com Used for Call book data lookup for callsigns not found at callook.info https://www.hamqth.com APRS.FI Used for APRS Data lookup https://aprs.fi Radioid.net Used for DMR/NXDN ID Lookups https://radioid.net"},{"location":"#contact","title":"Contact","text":"<p>If you have questions, please feel free to reach out to me. You can reach me in one of the following ways:</p> <ul> <li>Discord: Ravendos</li> <li>Mastodon: @n8acl@mastodon.radio</li> <li>E-mail: n8acl@qsl.net</li> </ul> <p>Or open an issue on Github. I will respond to it, and of course you, when I can. Remember, this is a hobby and there are other daily distractors that come first, like work, school and family.</p> <p>If you reach out to me and have an error, please include what error you are getting and what you were doing. I may also ask you to send me certain files to look at. Otherwise just reach out to me :).</p>"},{"location":"Installation/","title":"Installation/Setup","text":""},{"location":"Installation/#installation-steps","title":"Installation Steps","text":"<ol> <li>Obtain API Keys/Logins</li> <li>Clone Repo</li> <li>Configure the Bot</li> <li>Run the Bot</li> </ol> <p>Remember that all the commands shared here are for Linux. So if you want you can run this on a Linux Server or even a Raspberry Pi. (Mine is running on a Raspberry Pi 4 2 GB model with many other bots and scripts running with no issues.)</p> <p>If you want to run this on a Windows or Mac machine, you will need to install Python3 and be familiar installing from a requirements.txt.</p>"},{"location":"Installation/#obtain-api-keys","title":"Obtain API Keys","text":"<p>First you will need to obtain some API Keys and Logins for this to work. Please see the Obtaining API Keys guide and then come back here.</p>"},{"location":"Installation/#clone-repo","title":"Clone Repo","text":"<p>Next you will need to clone the repo. Use the following:</p> <pre><code>git clone https://github.com/n8acl/hammy-discord-bot.git\ncd hammy-discord-bot\n</code></pre>"},{"location":"Installation/#configuring-the-script","title":"Configuring the Script","text":"<p>Now we will need to configure the settings for the Bot. You will need to open the <code>config.json</code> file in the <code>hammy-discord-bot</code> directory in your editor of choice. Make sure you are in the correct Directory.</p> <p>In the file you will see the following:</p> <pre><code>{\n\"discord_bot_token\": \"DISCORD BOT TOKEN HERE\",\n\"discord_server_id\": \"DISCORD SERVER ID HERE\",\n\"hamqth_username\": \"HAMQTH USERNAME HERE\",\n\"hamqth_password\": \"HAMQTH PASSWORD HERE\",\n\"aprsfikey\":\"APRS.FI API KEY HERE\"\n}\n</code></pre> <p>Please put the corresponding Keys into the correct fields. All fields are needed for the script to work.</p>"},{"location":"Installation/#running-the-bot","title":"Running the bot","text":"<p>There are two methods that can be used to run the bot. * Docker (Preferred) * Screen Session</p>"},{"location":"Installation/#run-using-screen-session-method","title":"Run using Screen Session Method","text":"<p>To use this method, you will need to install the needed packages, cloning the repo to get the script and then installing the needed libraries for the script to work properly all by hand.</p> <p>Before running the following commands, please make sure you are in the <code>hammy-discord-bot</code> directory that was cloned above and that you have already updated the <code>config.json</code> file:</p> <pre><code>sudo apt-get update &amp;&amp; sudo apt-get -y upgrade &amp;&amp; sudo apt-get -y dist-upgrade\n\nsudo apt-get install python3 python3-pip git screen\n\npip3 install -r requirements.txt\n\nscreen -R hammy-discord-bot\n\npython3 hammy-discord-bot.py\n</code></pre> <p>The Bot will start running and should show up in your server. You can then press <code>Ctrl+A+D</code> to disconnect from the screen session to allow the bot to run on it's own. If the box that you are running this on ever needs a reboot, you will need to restart the screen session again.</p>"},{"location":"Installation/#running-the-bot-using-the-docker-method-preferred","title":"Running the bot using the Docker Method (Preferred)","text":"<p>The bot can also be run in Docker. This is the preferred method. The bot can be run in 2 different ways with Docker. You can build the container yourself, or you can use a pre-built container from Docker hub.</p> <p>To use the Docker container, you will need to have Docker and Docker-Compose installed and configured properly. There are plenty of Guides online to accomplish this and support of that is outside the scope of this project/document.</p> <p>Prebuilt Container on DockerHub</p> <p>To use the prebuilt container, set the keys in the <code>config.json</code> file and then use the <code>docker-compose.yaml</code> file provided in the repo.</p> <p>Make sure to check the yaml file first and set the path to where your <code>config.json</code> file is. </p> <p>Then just use:</p> <pre><code>docker-compose pull\ndocker-compose up -d\n</code></pre> <p>to pull and start the container. The bot should start and connect and show up in your server.</p> <p>Building the Container</p> <p>To build the container, set the keys in the <code>config.json</code> file and then use the <code>docker-compose.yaml</code> file provided in the repo.</p> <p>Make sure to check the yaml file first and change the image line from:</p> <pre><code>image: n8acl/hammy_bot:latest\n</code></pre> <p>to</p> <pre><code>build: .\n</code></pre> <p>Also make sure to set the full path to where your <code>config.json</code> file is. </p> <p>Then use:</p> <pre><code>docker-compose build\ndocker-compose up -d\n</code></pre> <p>to build and Start the container. The bot should start and show up in your server.</p>"},{"location":"bot-commands/","title":"Bot Commands","text":"<p>All Commands can be issued from any text channel and the message will be returned in a message that only you can see. While callbook data is available online publicly, this helps to keep it at least a little private on the server.</p> Command Description Example /callsign &lt; callsign &gt; Returns callbook data for the callsign queried,including DMR ID and NXDNID, in a DM. /callsign W1AW /dmr &lt; dmrid &gt; Returns callbook data for the DMR ID queried,including DMR ID and NXDNID, in a DM.This is useful to determine who is talking if you see a DMR IDon your Radio that is not loaded into the radio contact list. /dmr 1234567 /nxdn &lt; nxdnid &gt; Returns callbook data for the NXDN ID queried,including DMR ID and NXDNID, in a DM.This is useful to determine who is talking if you see a NXDN IDon your Radio that is not loaded into the radio contact list. /nxdn 1234567 /aprs  Returns last postion beaconed for the station queried.Note that SSID is optional, but it will not do awildcard or fuzzy search. /aprs W1AW/aprs W1AW-9 /hammy Brings up help text with the above command list. /hammy"},{"location":"changelog/","title":"Change Log","text":"<ul> <li> <p>09/21/2023 - Moved bot to Docker Container</p> </li> <li> <p>05/30/2022 - Removed returning data in a DM to returning it as an ephemeral message using slash commands.</p> </li> <li> <p>05/25/2022 - Version 4.0 Release</p> </li> <li> <p>Migrated to <code>pycord</code> discord library for slash command support. This replaces the <code>interactions.py</code> library and the <code>discord.py</code> library.</p> </li> <li> <p>03/14/2022 - Version 3.0 Release</p> </li> <li>Migrated to <code>interactions.py</code> for slash command support</li> <li> <p>Removed Repeater lookup for now. <code>interactions.py</code> does not support file sending at this point and the returns are too large to send via a message.</p> </li> <li> <p>02/19/2022 - Version 2.0 Release</p> </li> <li> <p>Added ability to look up North American Repeaters via RepeaterBook.com</p> </li> <li> <p>01/18/2022 - Minor Release</p> </li> <li> <p>Added HamQTH.com for international callsign lookups. If a callsign is not found at callook.info, it will then try to retreive information on that callsign from HamQTH.com.</p> </li> <li> <p>01/15/2022 - Initial Release 1.0</p> </li> </ul>"},{"location":"obtaining_api_keys/","title":"Obtaining your API Keys","text":"<p>The first step in this process will be obtaining the API keys that you need. </p> <p>Even though this script does alot, there are alot of other webservices and networks that it needs to interact with and that is where these API, or Advanced Programmer Interface, Keys come in. An API is a service provided to allow users to programatically interact with the fore mentioned webservice.</p> <p>While gathering your keys, make sure to copy them to a safe place where you can find them. You will need them for the script and some of these services can take a few days to approve your access. So please make sure to work through this and get all the keys you need saved some place before you start.</p> <p>This part of the installation process, especially for a new user, takes the longest and is the most frustrating. If you already have some keys for each of these, you can use those if you choose to, to make things quicker.</p>"},{"location":"obtaining_api_keys/#aprsfi-api-key","title":"APRS.fi API Key","text":"<ul> <li>First and foremost, you will need an APRS.fi account. On your account page is the API key you will need.</li> </ul>"},{"location":"obtaining_api_keys/#hamqthcom-login","title":"HamQTH.com Login","text":"<ul> <li>To be able to use HamQTH.com for searching (especially International Callsigns), you will need to obtain a username and password for HamQTH.com. Click here to register.</li> </ul>"},{"location":"obtaining_api_keys/#discord","title":"Discord","text":"<ul> <li>Go to: https://discord.com/developers/applications</li> <li>Click <code>New Application</code></li> <li>Give it a name (I called it Hammy)</li> <li>On the next screen, you can upload an avatar for the bot.</li> <li>Click the <code>bot</code> selection under settings</li> <li>Click <code>Add Bot</code></li> <li>Give it a Name (I used the same name )</li> <li>Then Copy the Bot Token (you will need this for the config.py part of the script along with the APRS.fi keys)</li> <li>Turn off <code>Public Bot</code></li> <li>Make sure to turn on the <code>Message Intents</code> Setting under <code>Privileged Gateway Intents</code>.</li> <li>Save Settings</li> <li>Click <code>OAuth2</code> and then <code>URL Generator</code></li> <li>For Scope Choose <code>bot</code> and <code>appplications.commands</code></li> <li>For Permissions, choose the following:<ul> <li>Under General Permissions:<ul> <li>Read Messages/View Channels</li> </ul> </li> <li>Under Text Permissions:<ul> <li>Send messages</li> <li>Send Messages in threads</li> <li>Embed Links</li> <li>Attach Files</li> <li>Read message History</li> <li>Use Slash Commands</li> </ul> </li> </ul> </li> <li>Copy the generated URL</li> <li>Paste it into a browser window Address bar</li> <li>Choose the Server you want to authorize it to and then click authorize.</li> <li>It should pop into the server.</li> <li>Next you will need to get your server id.</li> <li>To get this, you will need to, on Discord, go into <code>User Settings</code>-&gt;<code>Advanced</code> and turn on <code>Developer Mode</code> (if it is not already on.)</li> <li>Then just right click on your server's icon and click <code>Copy ID</code>. Then go back into your <code>config.json</code> and paste that ID in the <code>discord_server_id</code> field.</li> </ul> <p>Once you have the keys you need and the bot authorized into your server, you will eventually copy them into the appropriate places in the config.json file, but now we need to get the files and get things installed.</p>"}]}